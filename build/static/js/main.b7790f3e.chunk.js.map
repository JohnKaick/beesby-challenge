{"version":3,"sources":["Features/User/Dialog/UserFormComponent.jsx","Features/User/Dialog/UserFormContainer.jsx","Modules/Api.js","Features/User/UserComponent.jsx","Features/User/UserContainer.jsx","Modules/App.js","serviceWorker.js","index.js"],"names":["UserFormComponent","_ref","children","open","id","firstName","lastName","msgError","onChange","onOpen","onClose","onSave","onDelete","react_default","a","createElement","Modal","trigger","size","Icon","link","name","style","float","margin","onClick","Header","Content","Description","Form","onSubmit","Input","label","value","Actions","Message","warning","compact","Button","danger","primary","UserFormContainer","state","e","_this","setState","Object","defineProperty","props","axios","get","concat","then","res","data","_this$state","put","FirstName","LastName","getUsers","post","create","delete","remove","Dialog_UserFormComponent","assign","this","Component","UserComponent","users","onGet","Container","Grid","Row","Column","as","Dialog_UserFormContainer","floated","List","divided","relaxed","map","u","Item","verticalAlign","UserContainer","User_UserComponent","BrowserRouter","Switch","Route","path","component","exact","Redirect","to","React","Boolean","window","location","hostname","match","ReactDOM","render","App_default","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b7790f3e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Modal, Icon, Form, Button, Message } from 'semantic-ui-react';\r\n\r\nconst UserFormComponent = ({\r\n    children,\r\n    open,\r\n    id,\r\n    firstName,\r\n    lastName,\r\n    msgError,\r\n    onChange,\r\n    onOpen,\r\n    onClose,\r\n    onSave,\r\n    onDelete,\r\n}) => (\r\n        <Modal\r\n            open={open}\r\n            trigger={children}\r\n            onOpen={onOpen}\r\n            size='small'\r\n        >\r\n            <Icon link size='large' name='cancel' style={{ float: 'right', margin: '10px' }} onClick={onClose} />\r\n            <Modal.Header>Usu√°rio</Modal.Header>\r\n            <Modal.Content>\r\n                <Modal.Description>\r\n                    <Form onSubmit={onSave}>\r\n                        <Form.Input label=\"Nome\" name=\"firstName\" value={firstName} onChange={onChange} />\r\n                        <Form.Input label=\"Sobrenome\" name=\"lastName\" value={lastName} onChange={onChange} />\r\n                    </Form>\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                {msgError && (\r\n                    <Message warning compact>{msgError}</Message>\r\n                )}\r\n                {id && (\r\n                    <Button danger onClick={onDelete}>\r\n                        <Icon name='trash' /> Excluir\r\n                    </Button>\r\n                )}\r\n                <Button primary onClick={onSave}>\r\n                    <Icon name='save' /> Salvar\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    );\r\n\r\nexport default UserFormComponent;","import React, { Component } from 'react';\r\nimport { getById, create, update, remove } from '../../../Modules/Api';\r\n\r\nimport UserFormComponent from './UserFormComponent';\r\n\r\nclass UserFormContainer extends Component {\r\n\r\n    state = {\r\n        open: false,\r\n        id: null,\r\n        firstName: '',\r\n        lastName: '',\r\n        msgError: null,\r\n    }\r\n\r\n    onChange = (e, { name, value }) => {\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    onOpen = () => {\r\n        if (this.props.id) {\r\n            getById(this.props.id).then(res => {\r\n                this.setState({\r\n                    open: true,\r\n                    id: res.data.id,\r\n                    firstName: res.data.firstName,\r\n                    lastName: res.data.lastName,\r\n                    msgError: null,\r\n                })\r\n            })\r\n        } else {\r\n            this.setState({\r\n                open: true,\r\n                id: null,\r\n                firstName: '',\r\n                lastName: '',\r\n                msgError: null,\r\n            })\r\n        }\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    onSave = () => {\r\n        const { id, firstName, lastName } = this.state;    \r\n\r\n        if (firstName === '') {\r\n            this.setState({ msgError: 'Por favor, preencher o primeiro nome.'});\r\n        } else {\r\n            if (id) {\r\n                update({\r\n                    id,\r\n                    firstName,\r\n                    lastName\r\n                }).then(res => {\r\n                    this.props.getUsers();\r\n                    this.onClose();\r\n                })\r\n            } else {\r\n                create({\r\n                    firstName,\r\n                    lastName\r\n                }).then(res => {\r\n                    this.props.getUsers();\r\n                    this.onClose();\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    onDelete = () => {\r\n        const { id } = this.state;\r\n\r\n        remove(id).then(res => {\r\n            this.props.getUsers();\r\n            this.onClose();\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <UserFormComponent\r\n                {...this.props}\r\n                {...this.state}\r\n                onChange={this.onChange}\r\n                onOpen={this.onOpen}\r\n                onClose={this.onClose}\r\n                onSave={this.onSave}\r\n                onDelete={this.onDelete}\r\n            />    \r\n        )   \r\n    }\r\n\r\n}\r\n\r\nexport default UserFormContainer;","import axios from 'axios';\r\n\r\nexport function getAll() {\r\n    return axios.get('https://localhost:44358/api/user')\r\n};\r\n\r\nexport function getById(id) {\r\n    return axios.get(`https://localhost:44358/api/user/${id}`)\r\n};\r\n\r\nexport function create(data) {\r\n    return axios.post('https://localhost:44358/api/user', {\r\n        FirstName: data.firstName,\r\n        LastName: data.lastName,\r\n    })\r\n};\r\n\r\nexport function update(data) {\r\n    return axios.put(`https://localhost:44358/api/user/${data.id}`, {\r\n        FirstName: data.firstName,\r\n        LastName: data.lastName,\r\n    })\r\n};\r\n\r\nexport function remove(id) {\r\n    return axios.delete(`https://localhost:44358/api/user/${id}`)\r\n};","import React from 'react';\r\nimport { Container, Grid, Header, Button, Icon, List } from 'semantic-ui-react';\r\n\r\nimport UserFormContainer from './Dialog/UserFormContainer';\r\n\r\nconst UserComponent = ({\r\n    users,\r\n    onGet\r\n}) => (\r\n    <Container>\r\n        <Grid>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <Header as='h1' style={{ margin: '10px' }}>\r\n                        Usu√°rios\r\n                        <UserFormContainer getUsers={onGet}>\r\n                            <Button primary floated='right'>\r\n                                <Icon name='plus' /> Cadastrar\r\n                            </Button>\r\n                        </UserFormContainer>\r\n                    </Header>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <List divided relaxed>\r\n                        {(users || []).map(u => (\r\n                            <UserFormContainer getUsers={onGet} id={u.id}>\r\n                                <List.Item>\r\n                                    <List.Icon name='github' size='large' verticalAlign='middle' />\r\n                                    <List.Content>\r\n                                        <List.Header as='a'>{u.firstName}</List.Header>\r\n                                        <List.Description as='a'>{u.firstName} {u.lastName}</List.Description>\r\n                                    </List.Content>\r\n                                </List.Item>\r\n                            </UserFormContainer>\r\n                        ))}\r\n                    </List>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    </Container>\r\n);\r\n\r\nexport default UserComponent;","import React, { Component } from 'react';\r\nimport { getAll } from '../../Modules/Api';\r\n\r\nimport UserComponent from './UserComponent';\r\n\r\nclass UserContainer extends Component {\r\n\r\n    state = {\r\n        users: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onGet();\r\n    }\r\n    \r\n    onGet = () => {\r\n        getAll().then(res => {\r\n            this.setState({ users: res.data || [] });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <UserComponent \r\n                {...this.state}\r\n                onGet={this.onGet}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserContainer;","import React from 'react';\r\nimport { Switch, Redirect } from 'react-router-dom';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport UserContainer from '../Features/User/UserContainer';\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/\" component={UserContainer} exact />\r\n                    <Redirect exact to='/' component={UserContainer} />\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport App from './Modules/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}